library (fields)
library (sp)
library (gstat)
library (ggplot2)
require (reshape2)
library (survival)
library (ggthemes)
library (scales)
library (dplyr)
library (mice)
library (randomForest)
library(magrittr)
setwd ("/Users/Vlad/projects/project-VSP/")
PROV_DATA <- "Data/CFTR_PROVEANScores.csv"
EXAC_DATA <- "Data/MAPT_ExACScores.csv"
MUTPRED_DATA <- "Data/MAPT_MutPredScores.csv"
SavePlot <-"/VSP-images/MAPT_MutPred-EXAC.png"
AC_Limit <- 10
GraphTitle <- c("MAPT MutPpred - ExAC, AC Limit =", AC_Limit)
#read data files
EXAC<-read.csv(EXAC_DATA)
#PROV<-read.csv(PROV_DATA, sep =',')
#PROV_transformed<-reshape(PROV, idvar="position", v.names = "PROV_Scores", timevar ="Index", varying = c("A", "C", "D", "E","F", "G", "H", "I", "K", "L", "M", "N","P", "Q", "R", "S", "T", "V", "W", "Y","Del"), direction="long")
MutPred<-read.csv(MUTPRED_DATA)
#colnames (PROV_transformed)[2] <-"AA_POSITION"
#colnames (PROV_transformed)[4] <-"PROVEAN_SCORE"
Merged_DF<-merge(EXAC,MutPred, by=c("MUTATION"), all =FALSE)
Merged_DF[is.na(Merged_DF)]<-0
#modify amino acid notation to drop .p (ExAC format)
EXAC$Ptein.Consequence<-gsub("p.","", as.character(EXAC$amino_acid_change))
#adjust prediction scores - so that the range is similar to AA coordinates
Merged_DF$PROVEAN_SCORE <- Merged_DF$PROVEAN_SCORE*-100
Merged_DF$MUTPRED.Score<-round(Merged_DF$MUTPRED.Score*100, 0)
Merged_DF$MUTPRED.Score<-rescale(Merged_DF$MUTPRED.Score, to =c(1,800)) #TODO:needs to be auto set to length of protein
#set max allele count to a value best suited for analysis
#TODO:Figure out how to do this algorithmically
Merged_DF$ALLELE.COUNT[Merged_DF$ALLELE.COUNT>AC_Limit]<-AC_Limit
#Spacial Interpolation using amino acid index and prediction score as x and y axis
OP      <- par( mar=c(2,2,2,2))
coordinates(Merged_DF) <- c("AA_POS","MUTPRED.Score")
plot(Merged_DF, pch=16, cex=((Merged_DF$ALLELE.COUNT-1)/200))
text(Merged_DF, as.character(Merged_DF$ALLELE.COUNT), pos=3, col="grey", cex=0.8)
# Create an empty grid where n is the total number of cells
#layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
grd              <- as.data.frame(spsample(Merged_DF, "regular", n=10000))
names(grd)       <- c("AA_POS", "MUTPRED.Score")
coordinates(grd) <- c("AA_POS","MUTPRED.Score")
gridded(grd)     <- TRUE  # Create SpatialPixel object
fullgrid(grd)    <- TRUE  # Create SpatialGrid object
# Interpolate the surface using a power value of 2 (idp=2.0)
Merged_DF.idw <- idw(ALLELE.COUNT~1,Merged_DF,newdata=grd,idp=3.0)
# Plot the raster and the sampled points
#OP      <- par( mar=c(6,2,2,2))
png(filename='Image.png')
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(10), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
library (fields)
library (sp)
library (gstat)
library (ggplot2)
require (reshape2)
library (survival)
library (ggthemes)
library (scales)
library (dplyr)
library (mice)
library (randomForest)
library(magrittr)
setwd ("/Users/Vlad/projects/project-VSP/")
PROV_DATA <- "Data/CFTR_PROVEANScores.csv"
EXAC_DATA <- "Data/MAPT_ExACScores.csv"
MUTPRED_DATA <- "Data/MAPT_MutPredScores.csv"
SavePlot <-"/VSP-images/MAPT_MutPred-EXAC.png"
AC_Limit <- 10
GraphTitle <- c("MAPT MutPpred - ExAC, AC Limit =", AC_Limit)
#read data files
EXAC<-read.csv(EXAC_DATA)
#PROV<-read.csv(PROV_DATA, sep =',')
#PROV_transformed<-reshape(PROV, idvar="position", v.names = "PROV_Scores", timevar ="Index", varying = c("A", "C", "D", "E","F", "G", "H", "I", "K", "L", "M", "N","P", "Q", "R", "S", "T", "V", "W", "Y","Del"), direction="long")
MutPred<-read.csv(MUTPRED_DATA)
#colnames (PROV_transformed)[2] <-"AA_POSITION"
#colnames (PROV_transformed)[4] <-"PROVEAN_SCORE"
Merged_DF<-merge(EXAC,MutPred, by=c("MUTATION"), all =FALSE)
Merged_DF[is.na(Merged_DF)]<-0
#modify amino acid notation to drop .p (ExAC format)
EXAC$Ptein.Consequence<-gsub("p.","", as.character(EXAC$amino_acid_change))
#adjust prediction scores - so that the range is similar to AA coordinates
Merged_DF$PROVEAN_SCORE <- Merged_DF$PROVEAN_SCORE*-100
Merged_DF$MUTPRED.Score<-round(Merged_DF$MUTPRED.Score*100, 0)
Merged_DF$MUTPRED.Score<-rescale(Merged_DF$MUTPRED.Score, to =c(1,800)) #TODO:needs to be auto set to length of protein
#set max allele count to a value best suited for analysis
#TODO:Figure out how to do this algorithmically
Merged_DF$ALLELE.COUNT[Merged_DF$ALLELE.COUNT>AC_Limit]<-AC_Limit
#Spacial Interpolation using amino acid index and prediction score as x and y axis
OP      <- par( mar=c(2,2,2,2))
coordinates(Merged_DF) <- c("AA_POS","MUTPRED.Score")
plot(Merged_DF, pch=16, cex=((Merged_DF$ALLELE.COUNT-1)/200))
text(Merged_DF, as.character(Merged_DF$ALLELE.COUNT), pos=3, col="grey", cex=0.8)
# Create an empty grid where n is the total number of cells
#layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
grd              <- as.data.frame(spsample(Merged_DF, "regular", n=1000))
names(grd)       <- c("AA_POS", "MUTPRED.Score")
coordinates(grd) <- c("AA_POS","MUTPRED.Score")
gridded(grd)     <- TRUE  # Create SpatialPixel object
fullgrid(grd)    <- TRUE  # Create SpatialGrid object
# Interpolate the surface using a power value of 2 (idp=2.0)
Merged_DF.idw <- idw(ALLELE.COUNT~1,Merged_DF,newdata=grd,idp=3.0)
# Plot the raster and the sampled points
#OP      <- par( mar=c(6,2,2,2))
png(filename='Image.png')
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(10), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
x.tick.number <- 10
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
x.tick.number <- 10
y.tick.number <- 10
at <- seq(1, max(Merged_DF$AA_POS), length.out=x.tick.number)
axis(1, at = Merged_DF$AA_POSITION, labels = Merged_DF$AA_POSITION, las =1, pos=0)
#round(EXAC$MUT_PRED, 0)
at <- seq(1, max(Merged_DF$MUTPRED.Score), length.out=y.tick.number)
axis(2, at = at, labels = NULL , las = 1, pos=0)
contour(Merged_DF.idw,"var1.pred", add=TRUE, nlevels=10, col="#656565")
box()
plot(Merged_DF, add=TRUE, pch=16, cex=0.5)
text(coordinates(Merged_DF), as.character(round(Merged_DF$AA_POS,1)), pos=4, cex=0.8, col="blue")
parameters<-par(OP)
str(OP)
title(main=GraphTitle, font.main =4)
grd              <- as.data.frame(spsample(Merged_DF, "regular", n=20000))
names(grd)       <- c("AA_POS", "MUTPRED.Score")
coordinates(grd) <- c("AA_POS","MUTPRED.Score")
gridded(grd)     <- TRUE  # Create SpatialPixel object
fullgrid(grd)    <- TRUE  # Create SpatialGrid object
# Interpolate the surface using a power value of 2 (idp=2.0)
Merged_DF.idw <- idw(ALLELE.COUNT~1,Merged_DF,newdata=grd,idp=3.0)
# Plot the raster and the sampled points
#OP      <- par( mar=c(6,2,2,2))
png(filename='Image.png')
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
x.tick.number <- 10
y.tick.number <- 10
at <- seq(1, max(Merged_DF$AA_POS), length.out=x.tick.number)
axis(1, at = Merged_DF$AA_POSITION, labels = Merged_DF$AA_POSITION, las =1, pos=0)
#round(EXAC$MUT_PRED, 0)
at <- seq(1, max(Merged_DF$MUTPRED.Score), length.out=y.tick.number)
axis(2, at = at, labels = NULL , las = 1, pos=0)
contour(Merged_DF.idw,"var1.pred", add=TRUE, nlevels=10, col="#656565")
box()
plot(Merged_DF, add=TRUE, pch=16, cex=0.5)
text(coordinates(Merged_DF), as.character(round(Merged_DF$AA_POS,1)), pos=4, cex=0.8, col="blue")
parameters<-par(OP)
str(OP)
title(main=GraphTitle, font.main =4)
#Creates a geostatistical map of genes using ExAC data
library (fields)
library (sp)
library (gstat)
library (ggplot2)
require (reshape2)
library (survival)
library (ggthemes)
library (scales)
library (dplyr)
library (mice)
library (randomForest)
library(magrittr)
setwd ("/Users/Vlad/projects/project-VSP/")
PROV_DATA <- "Data/CFTR_PROVEANScores.csv"
EXAC_DATA <- "Data/MAPT_ExACScores.csv"
MUTPRED_DATA <- "Data/MAPT_MutPredScores.csv"
SavePlot <-"/VSP-images/MAPT_MutPred-EXAC.png"
AC_Limit <- 10
GraphTitle <- c("MAPT MutPpred - ExAC, AC Limit =", AC_Limit)
#read data files
EXAC<-read.csv(EXAC_DATA)
#PROV<-read.csv(PROV_DATA, sep =',')
#PROV_transformed<-reshape(PROV, idvar="position", v.names = "PROV_Scores", timevar ="Index", varying = c("A", "C", "D", "E","F", "G", "H", "I", "K", "L", "M", "N","P", "Q", "R", "S", "T", "V", "W", "Y","Del"), direction="long")
MutPred<-read.csv(MUTPRED_DATA)
#colnames (PROV_transformed)[2] <-"AA_POSITION"
#colnames (PROV_transformed)[4] <-"PROVEAN_SCORE"
Merged_DF<-merge(EXAC,MutPred, by=c("MUTATION"), all =FALSE)
Merged_DF[is.na(Merged_DF)]<-0
#modify amino acid notation to drop .p (ExAC format)
EXAC$Ptein.Consequence<-gsub("p.","", as.character(EXAC$amino_acid_change))
#adjust prediction scores - so that the range is similar to AA coordinates
Merged_DF$PROVEAN_SCORE <- Merged_DF$PROVEAN_SCORE*-100
Merged_DF$MUTPRED.Score<-round(Merged_DF$MUTPRED.Score*100, 0)
Merged_DF$MUTPRED.Score<-rescale(Merged_DF$MUTPRED.Score, to =c(1,800)) #TODO:needs to be auto set to length of protein
#set max allele count to a value best suited for analysis
#TODO:Figure out how to do this algorithmically
Merged_DF$ALLELE.COUNT[Merged_DF$ALLELE.COUNT>AC_Limit]<-AC_Limit
#Spacial Interpolation using amino acid index and prediction score as x and y axis
OP      <- par( mar=c(2,2,2,2))
coordinates(Merged_DF) <- c("AA_POS","MUTPRED.Score")
plot(Merged_DF, pch=16, cex=((Merged_DF$ALLELE.COUNT-1)/200))
text(Merged_DF, as.character(Merged_DF$ALLELE.COUNT), pos=3, col="grey", cex=0.8)
# Create an empty grid where n is the total number of cells
#layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
grd              <- as.data.frame(spsample(Merged_DF, "regular", n=20000))
names(grd)       <- c("AA_POS", "MUTPRED.Score")
coordinates(grd) <- c("AA_POS","MUTPRED.Score")
gridded(grd)     <- TRUE  # Create SpatialPixel object
fullgrid(grd)    <- TRUE  # Create SpatialGrid object
# Interpolate the surface using a power value of 2 (idp=2.0)
Merged_DF.idw <- idw(ALLELE.COUNT~1,Merged_DF,newdata=grd,idp=3.0)
# Plot the raster and the sampled points
#OP      <- par( mar=c(6,2,2,2))
png(filename='Image.png')
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
dev.off()
library (fields)
library (sp)
library (gstat)
library (ggplot2)
require (reshape2)
library (survival)
library (ggthemes)
library (scales)
library (dplyr)
library (mice)
library (randomForest)
library(magrittr)
setwd ("/Users/Vlad/projects/project-VSP/")
PROV_DATA <- "Data/CFTR_PROVEANScores.csv"
EXAC_DATA <- "Data/MAPT_ExACScores.csv"
MUTPRED_DATA <- "Data/MAPT_MutPredScores.csv"
SavePlot <-"/VSP-images/MAPT_MutPred-EXAC.png"
AC_Limit <- 10
GraphTitle <- c("MAPT MutPpred - ExAC, AC Limit =", AC_Limit)
#read data files
EXAC<-read.csv(EXAC_DATA)
#PROV<-read.csv(PROV_DATA, sep =',')
#PROV_transformed<-reshape(PROV, idvar="position", v.names = "PROV_Scores", timevar ="Index", varying = c("A", "C", "D", "E","F", "G", "H", "I", "K", "L", "M", "N","P", "Q", "R", "S", "T", "V", "W", "Y","Del"), direction="long")
MutPred<-read.csv(MUTPRED_DATA)
#colnames (PROV_transformed)[2] <-"AA_POSITION"
#colnames (PROV_transformed)[4] <-"PROVEAN_SCORE"
Merged_DF<-merge(EXAC,MutPred, by=c("MUTATION"), all =FALSE)
Merged_DF[is.na(Merged_DF)]<-0
#modify amino acid notation to drop .p (ExAC format)
EXAC$Ptein.Consequence<-gsub("p.","", as.character(EXAC$amino_acid_change))
#adjust prediction scores - so that the range is similar to AA coordinates
Merged_DF$PROVEAN_SCORE <- Merged_DF$PROVEAN_SCORE*-100
Merged_DF$MUTPRED.Score<-round(Merged_DF$MUTPRED.Score*100, 0)
Merged_DF$MUTPRED.Score<-rescale(Merged_DF$MUTPRED.Score, to =c(1,800)) #TODO:needs to be auto set to length of protein
#set max allele count to a value best suited for analysis
#TODO:Figure out how to do this algorithmically
Merged_DF$ALLELE.COUNT[Merged_DF$ALLELE.COUNT>AC_Limit]<-AC_Limit
#Spacial Interpolation using amino acid index and prediction score as x and y axis
OP      <- par( mar=c(2,2,2,2))
coordinates(Merged_DF) <- c("AA_POS","MUTPRED.Score")
plot(Merged_DF, pch=16, cex=((Merged_DF$ALLELE.COUNT-1)/200))
text(Merged_DF, as.character(Merged_DF$ALLELE.COUNT), pos=3, col="grey", cex=0.8)
# Create an empty grid where n is the total number of cells
#layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
grd              <- as.data.frame(spsample(Merged_DF, "regular", n=20000))
names(grd)       <- c("AA_POS", "MUTPRED.Score")
coordinates(grd) <- c("AA_POS","MUTPRED.Score")
gridded(grd)     <- TRUE  # Create SpatialPixel object
fullgrid(grd)    <- TRUE  # Create SpatialGrid object
# Interpolate the surface using a power value of 2 (idp=2.0)
Merged_DF.idw <- idw(ALLELE.COUNT~1,Merged_DF,newdata=grd,idp=3.0)
# Plot the raster and the sampled points
#OP      <- par( mar=c(6,2,2,2))
png(filename='Image.png')
par(mar = c(4, 3, 2,4 ), mgp = c(1, 0.5, 0))
image(Merged_DF.idw,"var1.pred",col=terrain.colors(12), xlab="AA POSITION", ylab="MutPRED", mgp = c(1, 4, 0))
x.tick.number <- 10
y.tick.number <- 10
at <- seq(1, max(Merged_DF$AA_POS), length.out=x.tick.number)
axis(1, at = Merged_DF$AA_POSITION, labels = Merged_DF$AA_POSITION, las =1, pos=0)
#round(EXAC$MUT_PRED, 0)
at <- seq(1, max(Merged_DF$MUTPRED.Score), length.out=y.tick.number)
axis(2, at = at, labels = NULL , las = 1, pos=0)
contour(Merged_DF.idw,"var1.pred", add=TRUE, nlevels=10, col="#656565")
box()
plot(Merged_DF, add=TRUE, pch=16, cex=0.5)
text(coordinates(Merged_DF), as.character(round(Merged_DF$AA_POS,1)), pos=4, cex=0.8, col="blue")
parameters<-par(OP)
str(OP)
title(main=GraphTitle, font.main =4)
dev.off()
